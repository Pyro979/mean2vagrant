user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##

	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	##
	# Virtual Host Configs
	##

	rewrite_log on;


	log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

	server {
		listen 80;
		#listen 443 ssl;
		server_name mean2.dev;
		return 301 $scheme://www.mean2.dev$request_uri;
	}

	server {
		listen 80;
		server_name www.mean2.dev;

		location / {
			proxy_pass http://127.0.0.1:8080;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		location /api {
			rewrite ^/api/(.*) /$1  break;
			proxy_pass   	   http://127.0.0.1:8081;
			proxy_redirect     off;
			proxy_set_header   Host $host;
		}

		location /api1 {
			proxy_pass   	   http://127.0.0.1:8081$uri$is_args$args;
			proxy_redirect     off;
			proxy_set_header   Host $host;
		}

		location ~ ^/api2/(.*)$ {
			#rewrite ^/api2/(.*) /$1  break;
			proxy_pass   	   http://127.0.0.1:8081$1r;
			proxy_redirect     off;
			proxy_set_header   Host $host;
		}

		location /api3 {
			rewrite ^/api3(.*) /$1  break;
			proxy_pass   	   http://127.0.0.1:8081;
			proxy_redirect     off;
			proxy_set_header   Host $host;
		}
	}
  }